<template>
  <section>
    <div class="w-screen sm:text-sm bg-slate-500 m-auto">
      <div
        class="flex justify-center items-center w-2/3 my-auto h-14 mx-auto bg-slate-500"
      >
        <template v-for="(category, index) in list" :key="index">
          <nav class="flex ml-6 h-10 text-white items-center justify-center">
            <button class="" @click.prevent="setCategory(category)">
              {{ category }}
            </button>
          </nav>
        </template>

        <router-link to="/cart" class="ml-auto">
          <p class="ml-auto">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              fill="currentColor"
              class="bi bi-cart"
              viewBox="0 0 16 16"
            >
              <path
                d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l1.313 7h8.17l1.313-7zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2"
              />
            </svg>
          </p>
        </router-link>
      </div>
    </div>

    <main class="px-4 py-8">
      <div
        class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4"
      >
        <template v-for="product in filteredProducts" :key="product.id">
          <div class="bg-white overflow-hidden shadow-lg rounded-lg">
            <img
              :src="product.image"
              :alt="product.title"
              class="w-full h-48 object-contain"
            />
            <div class="p-4">
              <h1 class="text-lg font-bold mb-2">{{ product.title }}</h1>
              <p class="text-gray-700 text-sm mb-2">${{ product.price }}</p>
              <div class="flex items-center mb-2">
                <span class="text-yellow-400">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    fill="currentColor"
                    class="bi bi-star-fill mr-1"
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"
                    />
                  </svg>
                  {{ product.rating.rate }}
                </span>
              </div>
              <p class="text-gray-500 text-sm">{{ product.description }}</p>
              <div class="flex justify-between mt-4">
                <a href="#" class="text-blue-800 font-bold text-sm"
                  >Remove from cart</a
                >
                <div class="flex justify-center items-center ">
                  <div class=" flex justify-center items-center">
                    <button @click.prevent="increaseQuantity(product.id)">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-plus-circle-fill"
                        viewBox="0 0 16 16"
                      >
                        <path
                          d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"
                        />
                      </svg>
                    </button>
                    <p class="bg-gray-300 inline-flex h-6 w-6 p-2 text-center justify-center items-center m-2 ">{{productQuantities[product.id] || 1}}</p>
                    <button @click.prevent="decreaseQuantity(product.id)">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-dash-circle-fill"
                        viewBox="0 0 16 16"
                      >
                        <path
                          d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1z"
                        />
                      </svg>
                    </button>
                  </div>
                  <button
                    @click.prevent="addToCart(product.id)"
                    class="font-bold text-sm text-white bg-blue-800 px-3 py-1 ml-4 rounded"
                  >
                    Add to cart
                  </button>
                </div>
              </div>
            </div>
          </div>
        </template>
      </div>
    </main>
  </section>
</template>
<script>
import { useStore } from "@/store/pinia";

export default {
  data() {
    return {
      productQuantities: {},
    };
  },
  computed: {
    list() {
      const store = useStore();
      return ["All", ...store.categories];
    },
    filteredProducts() {
      const store = useStore();
      if (!store.selectedCategory || store.selectedCategory === "All") {
        return store.products;
      }
      return store.products.filter(
        (product) => product.category === store.selectedCategory
      );
    },
  },
  methods: {
    fetchData() {
      const store = useStore();
      store.fetchProducts();
    },
    setCategory(category) {
      const store = useStore();
      store.setCategory(category);
    },
    addToCart(productId) {
      const quantity = this.productQuantities[productId] || 1;
      const store = useStore();


      store.addToCart({ productId, quantity });
      console.log('qunatity' , quantity);

      this.productQuantities[productId] = 1;
    },

    increaseQuantity(Id) {
      if (!this.productQuantities[Id]) {
        this.productQuantities[Id] = 1; // using [] sets a new key if the key doesnot exist yet and add the value of 1
      } else {
        this.productQuantities[Id]++;
      }
      console.log('btn is clickin' ,Id);
    },

    decreaseQuantity(Id) {
      if (
        this.productQuantities[Id] &&
        this.productQuantities[Id] > 0
      ) {
        this.productQuantities[Id]--; // Decrease quantity if it exists and is greater than 0
      }
      console.log('btn is clickin' , Id);
    },
  },
  created() {
    this.fetchData();
  },
};
</script>

<style scoped></style>

<!--  <button @click="incrementQuantity(product.id)">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-plus-circle-fill"
                        viewBox="0 0 16 16"
                      >
                        <path
                          d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"
                        />
                      </svg>
                    </button> -->

<!-- <button @click="decrementQuantity(product.id)">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-dash-circle-fill"
                        viewBox="0 0 16 16"
                      >
                        <path
                          d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1z"
                        />
                      </svg>
                    </button> -->
