import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/ErrorNotification.vue");
import { useStore } from "/src/store/pinia.js";

const _sfc_main = {
  computed: {
      errorMessage(){
        const store= useStore();
        return store.errorMessage

      } 
  },
};

import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from "/node_modules/.vite/deps/vue.js?v=789c31f0"

const _hoisted_1 = {
  key: 0,
  class: "error-notification"
}

function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return ($options.errorMessage.visible)
    ? (_openBlock(), _createElementBlock("div", _hoisted_1, [
        _createElementVNode("p", null, _toDisplayString(_ctx.errorStore.message), 1 /* TEXT */),
        _createElementVNode("button", {
          onClick: _cache[0] || (_cache[0] = (...args) => (_ctx.errorStore.clearError && _ctx.errorStore.clearError(...args)))
        }, "Close")
      ]))
    : _createCommentVNode("v-if", true)
}

import "/src/components/ErrorNotification.vue?vue&type=style&index=0&lang.css"

_sfc_main.__hmrId = "d4acd7e6"
typeof __VUE_HMR_RUNTIME__ !== 'undefined' && __VUE_HMR_RUNTIME__.createRecord(_sfc_main.__hmrId, _sfc_main)
import.meta.hot.accept(mod => {
  if (!mod) return
  const { default: updated, _rerender_only } = mod
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(updated.__hmrId, updated.render)
  } else {
    __VUE_HMR_RUNTIME__.reload(updated.__hmrId, updated)
  }
})
import _export_sfc from "/@id/__x00__plugin-vue:export-helper"
export default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render],['__file',"D:/Vue/new-login/login project/src/components/ErrorNotification.vue"]])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRDovVnVlL25ldy1sb2dpbi9sb2dpbiBwcm9qZWN0L3NyYy9jb21wb25lbnRzL0Vycm9yTm90aWZpY2F0aW9uLnZ1ZSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJFcnJvck5vdGlmaWNhdGlvbi52dWUiXSwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxyXG4gIDxkaXYgdi1pZj1cImVycm9yTWVzc2FnZS52aXNpYmxlXCIgY2xhc3M9XCJlcnJvci1ub3RpZmljYXRpb25cIj5cclxuICAgIDxwPnt7IGVycm9yU3RvcmUubWVzc2FnZSB9fTwvcD5cclxuICAgIDxidXR0b24gQGNsaWNrPVwiZXJyb3JTdG9yZS5jbGVhckVycm9yXCI+Q2xvc2U8L2J1dHRvbj5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAnQC9zdG9yZS9waW5pYSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgY29tcHV0ZWQ6IHtcclxuICAgICAgZXJyb3JNZXNzYWdlKCl7XHJcbiAgICAgICAgY29uc3Qgc3RvcmU9IHVzZVN0b3JlKCk7XHJcbiAgICAgICAgcmV0dXJuIHN0b3JlLmVycm9yTWVzc2FnZVxyXG5cclxuICAgICAgfSBcclxuICB9LFxyXG59O1xyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZT5cclxuLmVycm9yLW5vdGlmaWNhdGlvbiB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMXJlbTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuPC9zdHlsZT5cclxuIl0sIm1hcHBpbmdzIjoiO0FBUUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOztBQUV4QyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0VBQ2IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7TUFDTixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDWixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7O01BRTFCO0VBQ0osQ0FBQztBQUNILENBQUM7Ozs7O0VBbEJELEtBQUE7RUFDbUMsS0FBSyxFQUFDLG9CQUFvQjs7OztVQUFoRCxxQkFBWSxDQUFDLE9BQU87cUJBQS9CLG9CQUdNLE9BSE4sVUFHTTtRQUZKLG9CQUErQiw0QkFBekIsZUFBVSxDQUFDLE9BQU87UUFDeEIsb0JBQXFEO1VBQTVDLE9BQUssMENBQUUsZUFBVSxDQUFDLFVBQVUsSUFBckIsZUFBVSxDQUFDLFVBQVU7V0FBRSxPQUFLOztNQUhoRCIsImlnbm9yZUxpc3QiOltdfQ==